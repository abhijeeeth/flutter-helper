// Steps:
// 1. Open VS Code.
// 2. Go to the Command Palette (Ctrl + Shift + P or F1).
// 3. Type and select "Preferences: Open Settings (JSON)".
// 4. VS Code will open the settings.json file.
// 5. Replace or merge the contents of the file with the provided JSON settings below.
{
  "security.workspace.trust.untrustedFiles": "open",
  "workbench.colorTheme": "Monokai Dimmed",
  "explorer.confirmDelete": false,
  "git.confirmSync": false,
  "git.autofetch": true,
  "git.enableSmartCommit": true,
  // Flutter & Dart specific settings
  "editor.formatOnSave": true,
  "editor.formatOnType": true,
  "dart.previewFlutterUiGuides": true,
  "dart.openDevTools": "flutter",
  "dart.debugExternalPackageLibraries": false,
  "dart.debugSdkLibraries": false,
  "editor.codeActionsOnSave": {
    "source.fixAll": "explicit",
    "source.organizeImports": "explicit"
  },
  "[dart]": {
    "editor.rulers": [
      80
    ],
    "editor.selectionHighlight": false,
    "editor.suggestSelection": "first",
    "editor.bracketPairColorization.enabled": true,
    "editor.guides.bracketPairs": true,
    "editor.wordBasedSuggestions": "off",
    "editor.snippetSuggestions": "top",
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "Dart-Code.dart-code"
  },
  "dart.flutterHotReloadOnSave": true,
  "dart.hotReloadOnSave": true,
  "dart.previewHotReloadOnSaveWatcher": true,
  "dart.enableSdkFormatter": true,
  "dart.showInspectorNotificationsForWidgetErrors": true,
  "editor.inlineSuggest.enabled": true,
  "files.autoSave": "afterDelay",
  "files.autoSaveDelay": 1000,
  "editor.cursorSmoothCaretAnimation": "on"
}
/*
  # How This Settings File Helps Flutter Developers

  Welcome to your Flutter development journey! This settings file is designed to streamline your workflow 
  and help you adopt best practices from the start. Here's how it helps:

  - **Automatic Code Formatting**: Ensures your code is clean and consistent with industry standards.
  - **Hot Reload on Save**: Saves time by instantly reflecting changes in your Flutter app.
  - **Organized Imports**: Keeps your codebase tidy by automatically managing imports.
  - **Dart-Specific Enhancements**: Provides visual guides, debugging preferences, and optimized editor settings 
    tailored for Flutter and Dart development.
  - **Beginner-Friendly**: Each setting is documented to help you understand its purpose, making it easier to 
    customize as you grow as a developer.

  This file is prepared with care to give you a professional development environment right out of the box. 
  Happy coding!
*/

# VS Code Settings Explained

## üîê Security

- **`"security.workspace.trust.untrustedFiles": "open"`**  
  Automatically opens untrusted files in a workspace without showing a warning prompt. This saves time when working with new projects.

---

## üé® Theme

- **`"workbench.colorTheme": "Monokai Dimmed"`**  
  Sets the editor‚Äôs color theme to **Monokai Dimmed**, providing a visually appealing and developer-friendly interface.

---

## üìÅ Explorer

- **`"explorer.confirmDelete": false`**  
  Disables the confirmation dialog when deleting files from the Explorer, making file management faster.

---

## üîÑ Git Settings

- **`"git.confirmSync": false`**  
  Skips confirmation when syncing changes with Git, streamlining version control.

- **`"git.autofetch": true`**  
  Automatically fetches Git changes in the background, keeping your repository up to date.

- **`"git.enableSmartCommit": true`**  
  Allows committing directly without staging changes if there‚Äôs only one modified file, simplifying the commit process.

---

## üõ†Ô∏è Editor Formatting

- **`"editor.formatOnSave": true`**  
  Automatically formats the file when you save it, ensuring clean and readable code.

- **`"editor.formatOnType": true`**  
  Automatically formats as you type, reducing the need for manual adjustments.

---

## üê¶ Dart & Flutter

- **`"dart.previewFlutterUiGuides": true`**  
  Shows visual layout guides for Flutter widgets, making UI design intuitive.

- **`"dart.openDevTools": "flutter"`**  
  Opens **Flutter DevTools** by default when debugging, providing powerful debugging tools.

- **`"dart.debugExternalPackageLibraries": false`**  
  Prevents stepping into external package code during debugging, keeping the focus on your code.

- **`"dart.debugSdkLibraries": false`**  
  Prevents stepping into Dart SDK code during debugging, simplifying the debugging process.

---

## üí° Code Actions on Save

```json
"editor.codeActionsOnSave": {
  "source.fixAll": "explicit",
  "source.organizeImports": "explicit"
}
```

This ensures that your code is automatically fixed and imports are organized every time you save the file.